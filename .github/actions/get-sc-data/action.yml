name: "Get Service Catalogue Data"
description: "Composite action for getting Service Catalogue data"
outputs:
  component_description:
    description: "Description of the component"
    value: "${{ steps.get-sc-data.outputs.component_description }}"
  component_github_template_repo:
    description: "Template used to create the github project"
    value: "${{ steps.get-sc-data.outputs.component_github_template_repo }}"
  component_github_project_teams_write:
    description: "Project teams wtih write access to the github project"
    value: "${{ steps.get-sc-data.outputs.component_github_project_teams_write }}"
  component_github_project_teams_admin:
    description: "Project teams wtih admin access to the github project"
    value: "${{ steps.get-sc-data.outputs.component_github_project_teams_admin }}"
  component_github_project_teams_maintain:
    description: "Project teams wtih maintain access to the github project"
    value: "${{ steps.get-sc-data.outputs.component_github_project_teams_maintain }}"
  component_github_project_visibility:
    description: "Visibility of the github project"
    value: "${{ steps.get-sc-data.outputs.component_github_project_visibility }}"
  component_github_project_branch_protection_restricted_teams:
    description: "Branch protection teams configuration"
    value: "${{ steps.get-sc-data.outputs.component_github_project_branch_protection_restricted_teams }}"
  component_circleci_project_k8s_namespace:
    description: "Project Kubernetes namespace"
    value: "${{ steps.get-sc-data.outputs.component_circleci_project_k8s_namespace }}"
  component_circleci_context_k8s_namespaces:
    description: "Project Kubernetes namespace"
    value: "${{ steps.get-sc-data.outputs.component_circleci_context_k8s_namespaces }} "
  component_jira_project_keys:
    description: "Project jira keys"
    value: "${{ steps.get-sc-data.outputs.component_jira_project_keys }}"
  product_hmpps_product_id:
    description: "Product ID"
    value: "${{ steps.get-sc-data.outputs.product_pid }} "
runs:
  using: "composite"
  steps:
  - name: Checkout code
    uses: actions/checkout@v4
  - id: get-sc-data
    name: Get Service Catalogue Data
    run: /usr/bin/python3 ./scripts/get-sc-data.py >> $GITHUB_OUTPUT
    shell: bash
    env:
      COMPONENT_NAME: "${{ env.github_repo_name }}"
      SERVICE_CATALOGUE_API_KEY: "${{ env.service_catalogue_api_key }}"
